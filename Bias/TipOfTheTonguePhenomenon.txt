Give me a definition of the Tip of The Tongue Phenomenon (cognitive bias)

The **Tip of The Tongue Phenomenon**, also known as **lethologica**, is a cognitive bias where an individual fails to retrieve a specific word or term from memory, despite having partial recall and the feeling that retrieval is imminent¹². The phenomenon's name comes from the saying, "It's on the tip of my tongue"¹.

People experiencing this phenomenon can often recall one or more features of the target word, such as the first letter, its syllabic stress, and words similar in sound and/or meaning¹. They report a feeling of being seized by the state, feeling something like mild anguish while searching for the word, and a sense of relief when the word is found¹.

This phenomenon is universal and can occur more frequently with age². It's important to note that while an occasional tip-of-the-tongue state is normal, it can be referred to as an actual medical condition, known as anomic aphasia, when it becomes frequent enough to interfere with learning or daily life².



Give me 10 example scenarios of the Tip of The Tongue Phenomenon

Sure, here are 10 example scenarios where the Tip of The Tongue Phenomenon might be observed:

1. **Names**: You run into an old acquaintance and can't remember their name, even though you can recall specific details about them.
2. **Movies**: You're trying to remember the title of a movie. You remember the plot and the actors, but the title eludes you.
3. **Song Lyrics**: A song is playing, and you know the melody and most of the lyrics, but there's one line that you just can't recall.
4. **Vocabulary**: During a conversation or while writing, you struggle to find a specific word that perfectly expresses what you want to say.
5. **Exams**: During a test, you struggle to recall an answer that you studied and knew well before.
6. **Geography**: You're trying to name a country or city that you know the location of on a map, but the name escapes you.
7. **Historical Dates**: You're trying to remember the date of a significant historical event. You remember the event in detail, but the exact year is just out of reach.
8. **Book Titles**: You can describe the plot of a book and its characters, but you can't remember the book's title.
9. **Famous Quotes**: You remember the gist of a famous quote and who said it, but can't recall the exact wording.
10. **Recipes**: You're trying to remember a recipe. You remember most of the ingredients and steps, but there's one part that you can't recall.


Consider the scenario "names" and give me a small user story from it

Sure, here's a small user story based on the "Names" scenario:

> Meet Emily, a social butterfly who loves meeting new people. At a networking event, she met a woman who shared interesting insights about a project similar to Emily's work. They had a great conversation, and Emily wanted to connect with her later on LinkedIn.

> A few days later, Emily decided to find the woman on LinkedIn. She remembered the woman's face, her project details, and even the color of her dress, but she couldn't recall her name. Emily knew it started with an 'A', and it was on the tip of her tongue, but she just couldn't retrieve it from her memory.

> This is an example of the Tip of The Tongue Phenomenon. Despite having partial recall (the first letter of the name), Emily was unable to fully retrieve the name from her memory. She felt a sense of frustration as she knew that she knew the name, but just couldn't recall it at that moment.

> Eventually, after some time, the name "Amanda" suddenly popped into Emily's mind. She felt a sense of relief and quickly searched for Amanda on LinkedIn. This experience reminded Emily of the peculiarities of human memory and how the feeling of knowing something can sometimes be just out of reach.


If you had to make an ontology of the "Tip of the tongue phenomenon", what classes and properties would you create?


Classes:

Person: Represents an individual human being.
MemoryPhenomenon: Represents a phenomenon or event related to human memory.
Information: Represents a piece of knowledge or data.
RecallAttempt: Represents an attempt made by a person to recall information.
UnsuccessfulRecall: Represents an unsuccessful attempt to recall information.
MemoryBlock: Represents a block or obstacle in the process of recalling information.
MemoryRetrieval: Represents the process of retrieving information from memory.
Object Properties:

experiences: A relationship between a Person and a MemoryPhenomenon they experience.
hasInformation: A relationship between a Person and the Information they have.
attemptsRecall: A relationship between a Person and a RecallAttempt they make.
hasUnsuccessfulRecall: A relationship between a Person and an UnsuccessfulRecall they experience.
encountersBlock: A relationship between a Person and a MemoryBlock they encounter.
performsRetrieval: A relationship between a Person and a MemoryRetrieval they perform.
leadsTo: A relationship between a MemoryPhenomenon and an UnsuccessfulRecall it leads to.
causedBy: A relationship between an UnsuccessfulRecall and a MemoryBlock it is caused by.
resolvedBy: A relationship between a MemoryBlock and a MemoryRetrieval it is resolved by.
involves: A relationship between a RecallAttempt and the Information it involves.
blocks: A relationship between a MemoryBlock and a RecallAttempt it blocks.
retrieves: A relationship between a MemoryRetrieval and the Information it retrieves.
Data Properties:

hasPartialRecall: A property of a Person indicating whether they have partial recall of information.
hasFullRecall: A property of a Person indicating whether they have full recall of information.
hasMemoryBlock: A property of a Person indicating whether they encounter a memory block.
hasMemoryRetrieval: A property of a Person indicating whether they perform memory retrieval.


After this first conversation with bing's AI assistant, I decided to modify the proposed ontology to make it more streamlined and to make it easier to consult. This is the final result:

Classes:

Event
RecallAttempt
Memory
InformationObject
MemoryBlock
MemoryRetrieval
SocialAgent

Object Properties:

experiences (SocialAgent -> MemoryBlock or MemoryRetrieval)
attemptsRecall (SocialAgent -> RecallAttempt)
hasInformationObject (SocialAgent -> InformationObject)
has_consequence (RecallAttempt -> MemoryBlock or MemoryRetrieval)
lackInformationObject (SocialAgent -> InformationObject)
resolvedBy (MemoryBlock -> MemoryRetrieval)

Data Properties:

isSuccessful (Memory or RecallAttempt -> boolean)


This final version is comprehensive of the ODP that i found appropriate for the case. For the sake of exposition i avoided to write the prefixes of every ODP i used, which are still consultable in the .owl file or in the UML designed for this ontology.

create competency questions (and answers them) in the form of Sparql queries about this ontology

Question: Who are the social agents that experienced a memory block? SPARQL Query:
SELECT ?socialAgent WHERE {
  ?socialAgent rdf:type :SocialAgent .
  ?socialAgent :experiences ?memoryBlock .
  ?memoryBlock rdf:type :MemoryBlock .
}

Question: What are the recall attempts made by Emily? SPARQL Query:
SELECT ?recallAttempt WHERE {
  :Emily :attemptsRecall ?recallAttempt .
  ?recallAttempt rdf:type :RecallAttempt .
}

Question: Which memory blocks were resolved by a memory retrieval? SPARQL Query:
SELECT ?memoryBlock WHERE {
  ?memoryBlock :resolvedBy ?memoryRetrieval .
  ?memoryRetrieval rdf:type :MemoryRetrieval .
}

Question: What information objects does Emily lack? SPARQL Query:
SELECT ?informationObject WHERE {
  :Emily :lackInformationObject ?informationObject .
  ?informationObject rdf:type :InformationObject .
}

Question: Were Emily’s recall attempts successful? SPARQL Query:
SELECT ?recallAttempt ?isSuccessful WHERE {
  :Emily :attemptsRecall ?recallAttempt .
  ?recallAttempt :isSuccessful ?isSuccessful .
}

Please note that these queries assume that the ontology is defined with the prefix :. Replace : with your actual ontology prefix. Also, replace rdf:type and rdf:Property with your actual ontology’s class and property predicates if they are different. The prefix rdf: is commonly used for RDF type predicates in SPARQL queries. If your ontology uses a different predicate for indicating type or property, please replace rdf:type and rdf:Property with the appropriate predicates.


Literature consulted:
The tip-of-the-tongue state and curiosity, December 2017Cognitive Research Principles and Implications 2(1), DOI: 10.1186/s41235-017-0065-4, Janet MetcalfeJanet MetcalfeBennett L. SchwartzPaul BloomPaul Bloom. https://www.researchgate.net/publication/318504596_The_tip-of-the-tongue_state_and_curiosity
The tip-of-the-tongue state bias permeates unrelated concurrent decisions and behavior. https://link.springer.com/article/10.3758/s13421-019-00993-7
“A psycholinguistic exploration of disfluency behaviour during the tip-of-the-tongue phenomenon” investigates the impact of TOTs on disfluency. https://www.researchgate.net/publication/319330057_A_psycholinguistic_exploration_of_disfluency_behaviour_during_the_tip-of-the-tongue_phenomenon



postilla (per me non mettere su gitbook):
In your ontology, the connection between UnsuccessfulRecall and Information can be established through the RecallAttempt class and the involves object property. Here’s how:

A Person makes a RecallAttempt (via the attemptsRecall property).
This RecallAttempt involves some Information (via the involves property).
If the RecallAttempt is blocked by a MemoryBlock (via the blocks property), it leads to an UnsuccessfulRecall (via the leadsTo property).
So, to connect UnsuccessfulRecall to Information, you could traverse from UnsuccessfulRecall to RecallAttempt via the leadsTo property (in reverse), and then from RecallAttempt to Information via the involves property.

Here’s a SPARQL query that could represent this:

PREFIX : <http://www.example.org/ontology#>

SELECT ?unsuccessfulRecall ?information
WHERE {
  ?unsuccessfulRecall :leadsTo/^:blocks ?recallAttempt .
  ?recallAttempt :involves ?information .
}

This query will return pairs of unsuccessful recalls and the information involved in the recall attempts that led to them. Please replace the PREFIX with your actual ontology URI.

Remember, this is just a basic example. Depending on the specific competency questions you want to answer, you might need to adjust or extend this query. For example, you could add more conditions to filter the results, or use other SPARQL features to aggregate or order the results.



Tu
and with a specific object property?
Copilot
If you want to connect UnsuccessfulRecall to Information using a specific object property, you would need to introduce a new object property in your ontology that directly links these two classes.

For example, you could introduce a new object property called relatesTo, which connects an UnsuccessfulRecall directly to the Information it relates to.

Here’s how you could define this new object property:

Object Property: relatesTo
    Domain: UnsuccessfulRecall
    Range: Information

And here’s a SPARQL query that uses this new relatesTo property to connect UnsuccessfulRecall to Information:

PREFIX : <http://www.example.org/ontology#>

SELECT ?unsuccessfulRecall ?information
WHERE {
  ?unsuccessfulRecall :relatesTo ?information .
}

This query will return pairs of unsuccessful recalls and the information they relate to. Again, please replace the PREFIX with your actual ontology URI.

Remember, introducing new object properties should be done carefully, considering the overall design and coherence of your ontology. It’s important to ensure that the new property fits well with the existing classes and properties, and that it doesn’t introduce redundancy or confusion. If you’re unsure, it’s always a good idea to consult with an ontology expert or use ontology design patterns.